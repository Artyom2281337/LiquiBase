plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'groovy'
    id 'org.liquibase.gradle' version "2.0.4"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testCompile "org.codehaus.groovy:groovy-all:2.4.15"
    testImplementation "com.h2database:h2"
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'

    compile "org.springframework.boot:spring-boot-starter-validation"
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.5', ext: 'pom'
    compile group: 'org.liquibase', name: 'liquibase-core', version: '4.1.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    liquibaseRuntime 'org.liquibase:liquibase-core:3.6.2'
    liquibaseRuntime 'ch.qos.logback:logback-classic'
    liquibaseRuntime "org.postgresql:postgresql"
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
    liquibaseRuntime('org.springframework.boot:spring-boot-starter-data-jpa')
    liquibaseRuntime files('src/main')
    liquibaseRuntime sourceSets.main.output
}

test {
    useJUnitPlatform()
}

liquibase {
    //new File("${projectDir}/liquibase").mkdirs()
    def props = new Properties()
    file("${projectDir}/src/main/resources/liquibase.properties").withInputStream { props.load(it) }

    activities {
        main {
            url props['url']
            username props['username']
            password props['password']
            driver props['driver']
            databaseChangeLogTableName props['databaseChangeLogTableName']
            changeLogFile props['changeLogFile']
            defaultSchemaName props['defaultSchemaName']
            referenceUrl props['referenceUrl']
        }
    }
}
